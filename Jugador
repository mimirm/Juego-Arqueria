public class Jugador {
    private Arcos arco;
    private int tipoArco, estrategia;
    private double x0, y0, tirohumanoX, tirohumanoY;
    private EstrategiaAngel estrategiaAngel;
    private EstrategiaJulian estrategiaJulian;
    private EstrategiaMilen estrategiaMilen;
    private Interfaz interfaz;

    public Jugador(int estrategia, int display) {
        estrategiaAngel = new EstrategiaAngel();
        estrategiaJulian = new EstrategiaJulian();
        estrategiaMilen = new EstrategiaMilen();
        
        interfaz = new Interfaz(display);

        arco = new Arcos();
        tipoArco = (int) (Math.random()*3) +1;  
        /**
         *  tipoArco 1 es newbie
         *           2 es intermedio
         *           3 es experto
         */
        this.estrategia = estrategia;
        /*
         *   Estrategia 1 es humana
         *              2 a 4 es robot
         */
    }

    //Este método pide coordenadas al jugador.
    public void lanzarFlecha(int s, int t, double x, double y){  
        switch(tipoArco){
            case 1:
            estrategia(s,t,x,y);
            arco.arcoNovato (x0, y0);  
            break;
            
            case 2:
            estrategia(s,t,x,y);
            arco.arcoIntermedio (x0, y0);
            break;
            
            case 3:
            estrategia(s,t,x,y);
            arco.arcoProfesional (x0, y0);
            break;

        }
    }

    //Este método decide la estrategia con la cual el jugador debería de tirar.
    public void estrategia(int s, int t, double x2, double y2){
        switch(estrategia){
            case 1:
            estrategiaAngel.tirar( s, t, x2, y2);
            x0 = estrategiaAngel.getTiroX();
            y0 = estrategiaAngel.getTiroY();
            break;
            
            case 2:
            estrategiaJulian.tirar( s, t, x2, y2);
            x0 = estrategiaJulian.getTiroX();
            y0 = estrategiaJulian.getTiroY();
            break;
            
            case 3:
            estrategiaMilen.tirar( s, t, x2, y2);
            x0 = estrategiaMilen.getTiroX();
            y0 = estrategiaMilen.getTiroY();
            break;
            
            case 4:
            x0 = pedirTiroX();
            y0 = pedirTiroY();
            break;           
        }
    }

    //Este método le pide al usuario ingresar la coordenada donde quiere que la flecha se direccione y si decide ingresar algo diferente a un double o entero, se le da un 1 por default.
    public double pedirTiroX(){
        double numero = -1;
        String numeroEnLetras = interfaz.askInfo("Inserte la coordenada x");
        try {
            numero = Double.parseDouble( numeroEnLetras );  
        }
        catch(Exception e){
            numero = 1;
        }
        return numero;
    }
    public double pedirTiroY(){
        double numero = -1;
        String numeroEnLetras = interfaz.askInfo("Inserte la coordenada y");
        try {
            numero = Double.parseDouble( numeroEnLetras );  
        }
        catch(Exception e){
            numero = 1;
        }
        return numero;
    }

    public double getTiroX(){
      double tiro = x0;
      return tiro;
    }
    public double getTiroY(){
      double tiro = y0;
      return tiro;
    }
}
