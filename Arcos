/* 
*  Los arcos son analogos a los niveles de experiencia de los jugadores.
*  En vez de utilizar 'NivelDeExperiencia.." se crean arcos que se usan para tirar las flecha
*  Asimismo, el nivel del arco afecta la presicion del tiro.
*/
public class Arcos {

    private double x1, y1; 
    
    public Arcos (){
        x1 = 0.0;
        y1 = 0.0;
    }

    /*
    *   @Funcion: Este metodo elige aleatoriamente si el valor de entrada es negativo o positivo.
    *   @Param: variable double x
    *   @Return: varible double de valor x , pero con signo positivo o negativo.
    */
    public double signoRandom(double x){  
        int i = 0;
        double y = 0;
        i = (int) (Math.random()*2)+1;
        if (i == 1){
            y = x * -1;
        }
        else{
            y = x;
        }
        return y;
    }

    /*
    *   @Funcion: Los tres siguiente metodos calculan el error del tiro dependiendo de la habilidad del tirador, 
    *             eligen un numero aleatorio entre 0 y el margen, luego eligen si es positivo o negativo.
    *   @Param: Se utilizan las coordenadas (x, y) seleccionadas por el jugador
    */
    public void arcoNovato(double x0, double y0){   
        x1 = 0;
        y1 = 0;
        x1 = x0 + signoRandom(Math.random() * 1);
        y1 = y0 + signoRandom(Math.random() * 1);
    }

    public void arcoIntermedio(double x0, double y0){  
        x1 = 0;
        y1 = 0;
        x1 = x0 + signoRandom(Math.random() * 0.25);
        y1 = y0 + signoRandom(Math.random() * 0.25);
    }

    public void arcoProfesional(double x0, double y0){  
        x1 = 0;
        y1 = 0;
        x1 = x0 + signoRandom(Math.random() * 0.05);
        y1 = y0 + signoRandom(Math.random() * 0.05);
    }

    public double getX1(){
        return x1;
    }

    public double getY1(){
        return y1;
    }
}
